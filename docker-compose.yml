version: '3.8'
services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s


  backend:
    build: ./backend
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 5s
    networks:
      - app-network
    restart: always

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: saas
      POSTGRES_PASSWORD: saaspass
      POSTGRES_DB: plataforma
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saas -d plataforma"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
